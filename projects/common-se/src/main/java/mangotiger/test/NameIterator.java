package mangotiger.test;

import java.util.Iterator;

/**
 * A source of names for creating test data.  Names taken for list of Tropical Storms generated by US Weather Service.
 * @author Tom Gagnier
 */
public final class NameIterator implements Iterator<String> {
  private final String[][] names = {{"Arlene", "Bret", "Cindy", "Dennis", "Emily", "Franklin", "Gert", "Harvey",
      "Irene", "Jose", "Katrina", "Lee", "Maria", "Nate", "Ophelia", "Philippe", "Rita", "Stan", "Tammy", "Vince",
      "Wilma",}, {"Alberto", "Beryl", "Chris", "Debby", "Ernesto", "Florence", "Gordon", "Helene", "Isaac", "Joyce",
      "Kirk", "Leslie", "Michael", "Nadine", "Oscar", "Patty", "Rafael", "Sandy", "Tony", "Valerie", "William",}, {
      "Andrea", "Barry", "Chantal", "Dean", "Erin", "Felix", "Gabrielle", "Humberto", "Ingrid", "Jerry", "Karen",
      "Lorenzo", "Melissa", "Noel", "Olga", "Pablo", "Rebekah", "Sebastien", "Tanya", "Van", "Wendy",}, {"Arthur",
      "Bertha", "Cristobal", "Dolly", "Edouard", "Fay", "Gustav", "Hanna", "Ike", "Josephine", "Kyle", "Laura", "Marco",
      "Nana", "Omar", "Paloma", "Rene", "Sally", "Teddy", "Vicky", "Wilfred",}, {"Ana", "Bill", "Claudette", "Danny",
      "Erika", "Fred", "Grace", "Henri", "Ida", "Joaquin", "Kate", "Larry", "Mindy", "Nicholas", "Odette", "Peter",
      "Rose", "Sam", "Teresa", "Victor", "Wanda",}, {"Alex", "Bonnie", "Colin", "Danielle", "Earl", "Fiona", "Gaston",
      "Hermine", "Igor", "Julia", "Karl", "Lisa", "Matthew", "Nicole", "Otto", "Paula", "Richard", "Shary", "Tomas",
      "Virginie", "Walter",},};
  private int column;
  private int firstRow;
  private int lastRow = 1;
  private String first;
  private String middle;
  private String last;
  private static final int INITIAL_BUFFER_CAPACITY = 17;

  /** @return An alliterative first/last name pair. */
  public String next() {
    first = names[firstRow][column];
    middle = first.substring(0, 1);
    last = names[lastRow][column];
    column = (column + 1) % names[0].length;
    if (column == 0) {
      lastRow = (lastRow + 1) % names.length;
      if (lastRow == firstRow) {
        firstRow = (firstRow + 1) % names.length;
        lastRow = (firstRow + 1) % names.length;
      }
    }
    return toString();
  }

  public void remove() {
    throw new UnsupportedOperationException();
  }

  public boolean hasNext() {
    final boolean notFirst = column != 0 || firstRow != 0 || lastRow != 1;
    return notFirst || first == null;
  }

  public String getFirst() {
    return first;
  }

  public String getMiddle() {
    return middle;
  }

  public String getLast() {
    return last;
  }

  /** The number of unique first/last name pairs. */
  public int numberOfUniquePairs() {
    return names[0].length * names.length * (names.length - 1);
  }

  @Override public String toString() {
    final StringBuffer buffer = new StringBuffer(INITIAL_BUFFER_CAPACITY);
    return buffer.append(first).append(' ').append(middle).append(' ').append(last).toString();
  }
}
